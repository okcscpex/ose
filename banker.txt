#include <stdio.h>

int canAllocate(int process, int need[][10], int available[], int re-sources) {
    for (int i = 0; i < resources; i++) {
        if (need[process][i] > available[i]) {
            return 0;  
        }
    }
    return 1;
}

int Deadlock(int processes, int resources, int allocation[][10], int max[][10], int available[]) {
    int need[10][10], finish[10] = {0}, safeSeq[10];
    int work[10], count = 0;

    for (int i = 0; i < processes; i++) {
        for (int j = 0; j < resources; j++) {
            need[i][j] = max[i][j] - allocation[i][j];
        }
    }

    for (int i = 0; i < resources; i++) {
        work[i] = available[i];
    }

    while (count < processes) {
        int found = 0;
        for (int p = 0; p < processes; p++) {
            if (finish[p] == 0 && canAllocate(p, need, work, resources)) {
                for (int i = 0; i < resources; i++) {
                    work[i] += allocation[p][i];
                }

                safeSeq[count++] = p;
                finish[p] = 1;
                found = 1;
            }
        }

        if (!found) {
       ("System is not in a safe state.\n");
            return 0;
        }
    }

    printf("System is in a safe state.\nSafe sequence: ");
    for (int i = 0; i < processes; i++) {
        printf("P%d ", safeSeq[i]);
    }
    printf("\n");

    return 1;
}

int main() {
    int processes, resources;
    int allocation[10][10], max[10][10], available[10];

    printf("Enter the number of processes: ");
    scanf("%d", &processes);
    printf("Enter the number of resources: ");
    scanf("%d", &resources);

    printf("Enter the allocation matrix:\n");
    for (int i = 0; i < processes; i++) {
        for (int j = 0; j < resources; j++) {
            scanf("%d", &allocation[i][j]);
        }
    }

    printf("Enter the max matrix:\n");
    for (int i = 0; i < processes; i++) {
        for (int j = 0; j < resources; j++) {
            scanf("%d", &max[i][j]);
        }
    }

    printf("Enter the available resources:\n");
    for (int i = 0; i < resources; i++) {
        scanf("%d", &available[i]);
    }

    Deadlock(processes, resources, allocation, max, available);

    return 0;
}





